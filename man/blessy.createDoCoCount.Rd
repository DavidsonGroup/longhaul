% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blessy-createDoCoCount.R
\name{blessy.createDoCoCount}
\alias{blessy.createDoCoCount}
\title{Create DoCo-Level Count}
\usage{
blessy.createDoCoCount(dict, count_df)
}
\arguments{
\item{dict}{A data frame containing the `Transcript` and `DoCo` columns:
- \code{Transcript}: Transcript identifier.
- \code{DoCo}: Domain-combination string (grouping information).}

\item{count_df}{A data frame containing RNA-seq counts with the following columns:
- \code{TranscriptID}: Transcript IDs (required as the first column).
- Additional columns representing RNA-seq counts for biological samples (must be numeric).}
}
\value{
A data frame aggregated at the `DoCo` level with the following columns:
  - \code{DoCo}: Domain-combination string.
  - RNA-seq counts for biological samples.
}
\description{
This function aggregates RNA-seq counts from a count data frame at the `DoCo` level. 
Transcripts are grouped based on their `DoCo` assignment from a dictionary data frame (`dict`),
and counts are summed across biological samples. Unmatched transcripts are grouped into the DoCo
class ";;;".
}
\examples{
# Example dictionary data frame
dict <- data.frame(
  Transcript = c("Tx1", "Tx2", "Tx3"),
  DoCo = c("D1,D2;;; GeneA", "D3;;; GeneB", ";;; GeneC"),
  stringsAsFactors = FALSE
)

# Example count data frame
count_df <- data.frame(
  TranscriptID = c("Tx1", "Tx2", "Tx4", "Tx5"),
  Sample1 = c(10, 20, 5, 7),
  Sample2 = c(15, 25, 8, 10),
  stringsAsFactors = FALSE
)

# Create DoCo-level counts
doco_count <- blessy.createDoCoCount(dict, count_df)

}
