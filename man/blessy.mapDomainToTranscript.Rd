% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blessy-mapDomainToTranscript.R
\name{blessy.mapDomainToTranscript}
\alias{blessy.mapDomainToTranscript}
\title{Map Domains to Transcripts By Finding GRangesLists' Overlaps}
\usage{
blessy.mapDomainToTranscript(
  tx_grangesList,
  domain_grangesList,
  tx_df,
  domain_df
)
}
\arguments{
\item{tx_grangesList}{A `GRangesList` or `CompressedGRangesList` object representing transcripts.}

\item{domain_grangesList}{A `GRangesList` or `CompressedGRangesList` object representing domains.}

\item{tx_df}{A BED-like data frame representing transcripts, including columns like `chrom`, `chromStart`, `chromEnd`, `strand`, etc.}

\item{domain_df}{A BED-like data frame representing domains, including columns like `chrom`, `chromStart`, `chromEnd`, `strand`, etc.}
}
\value{
A data frame with where each row represents mapping of a domain to a transcripts.
}
\description{
This function maps domains to transcripts by identifying overlaps between two GRangesLists representing transcripts and domains.
It returns a mapping data frame containing all columns from both inputs for matching rows.
Column names are renamed for clarity and downstream analysis, and duplicate columns are removed.
}
\examples{
# Example BED-like data frames
tx_df <- data.frame(
  chrom = c("chr1", "chr1", "chr2"),
  chromStart = c(1000, 2000, 3000),
  chromEnd = c(1500, 2500, 3500),
  name = c("tx1", "tx2", "tx3"),
  strand = c("+", "-", "+"),
  thickStart = c(1000, 2000, 3000),
  thickEnd = c(1500, 2500, 3500),
  blockCount = c(2, 2, 2),
  blockSizes = c("100,200", "150,250", "200,300"),
  blockStarts = c("0,400", "0,500", "0,600"),
  geneName = c("geneA", "geneB", "geneC"),
  stringsAsFactors = FALSE
)

domain_df <- data.frame(
  chrom = c("chr1", "chr1", "chr2"),
  chromStart = c(1200, 2100, 3100),
  chromEnd = c(1300, 2200, 3200),
  name = c("domainA", "domainB", "domainC"),
  strand = c("+", "-", "+"),
  blockStarts = c("0", "0", "0"),
  stringsAsFactors = FALSE
)

# Example GRangesLists
tx_grangesList <- blessy.dfToGRangesList(tx_df)

domain_grangesList <- blessy.dfToGRangesList(domain_df)

# Map domains to transcripts and combine data frames
intersection_df <- blessy.mapDomainToTranscript(tx_grangesList, domain_grangesList, tx_df, domain_df)

}
