% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blessy-domainDeduplication.R
\name{blessy.domainDeduplication}
\alias{blessy.domainDeduplication}
\title{Domain Deduplication for Transcript-Domain Mapping}
\usage{
blessy.domainDeduplication(tx_domain_df, unique_domain = FALSE)
}
\arguments{
\item{tx_domain_df}{A data frame containing transcript-domain mapping data, including columns:
- \code{exonStarts}, \code{exonEnds}: Comma-separated exon start and end positions.
- \code{blockStarts}, \code{blockEnds}: Comma-separated block start and end positions.}

\item{unique_domain}{A logical value indicating whether to further deduplicate domains by keeping only unique domains per transcript. Default is \code{FALSE}.}
}
\value{
A deduplicated data frame of transcript-domain mapping.
}
\description{
This function deduplicates a transcript-domain mapping data frame by filtering out 
domains with non-exact matching. It ensures that only matches with relevant
exon-block relationships are retained.
}
\examples{
# Example data frame
intersect_df <- data.frame(
  exonStarts = c("1000,2000,3000", "1500,2500,3500"),
  exonEnds = c("1100,2100,3100", "1600,2600,3600"),
  blockStarts = c("1000,2000,3000", "1500,2500,3500"),
  blockEnds = c("1100,2100,3100", "1600,2600,3600")
)

# Apply the function to deduplicate domains
refined_df <- blessy.domainDeduplication(intersect_df)

}
